@charset "utf-8";
/* =========================================================
   extends
========================================================= */
// Table
%table {
  display: table;
  vertical-align: middle;
  >*{
    display: table-row;
    vertical-align: middle;
    >*{
      display: table-cell;
      vertical-align: middle;
    }
  }
}
// Clearfix
%group {
  &:after {
    display: block;
    visibility: hidden;
    clear: both;
    height: 0;
    content: ".";
    font-size: 0;
  }
}

//***********************
// imageReplace
//
// @param image file name
// @param image width
// @param image height
// @param appeared scale for retina
// @param background-position
// @param background-size
// @param background-repeat
//***********************
@mixin imageReplace($path, $imgWidth, $imgHeight, $scale: 1, $position: 0 0, $size: 100%, $repeat: no-repeat) {
  display: block;
  overflow: hidden;
  padding-top: $imgHeight * $scale;
  width: $imgWidth * $scale;
  height: 0;
  background-image: url($filePath + $path);
  background-position: $position;
  background-size: $size;
  background-repeat: $repeat;
}

//***********************
// Sprite css image replacement
//
// @param $sprited original file name
// @param appeared scale for retina
// @param display
//***********************
@mixin sprite-ir($sprite, $scale: 1, $display: block) {
  @include sprite-image($sprite);
  $sprite-offset-x: nth($sprite, 3) * $scale;
  $sprite-offset-y: nth($sprite, 4) * $scale;
  background-position: $sprite-offset-x  $sprite-offset-y;
  display: $display;
  overflow: hidden;
  padding-top: nth($sprite, 6) * $scale;
  width: nth($sprite, 5) * $scale;
  height: 0;
  background-repeat: no-repeat;
  background-size: nth($sprite, 7) * $scale nth($sprite, 8) * $scale;
}

//***********************
// Use Genericon
// @link http://genericons.com/
//
// @param content
// @param font-size
// @param vartical-align
// @param position
// @param display
// @param line-height
//***********************
@mixin genericon($content:'\f100', $fontsize: 1em, $valaign: text-bottom, $position: static, $display: inline-block, $line-height: 1em) {
  position: $position;
  display: $display;
  content: $content;
  vertical-align: $valaign;
  font-size: $fontsize;
  font-family: Genericons;
  line-height: $line-height;
}

//***********************
// use font-awesome
// @link https://github.com/FortAwesome/Font-Awesome
//
// @param content
// @param font-size
// @param vartical-align
// @param position
// @param display
// @param line-height
//***********************
@mixin fa($content: '', $fontsize: 1em, $valaign: baseline, $position: static, $display: inline-block, $line-height: 1em) {
  position: $position;
  display: $display;
  content: $content;
  vertical-align: $valaign;
  text-decoration: inherit;
  font-weight: normal;
  font-style: normal;
  font-size: $fontsize;
  font-family: FontAwesome;
  -webkit-font-smoothing: antialiased;
}

//***********************
// css graphic
//***********************
// Triangle
@mixin triangle($direction, $width, $height, $color) {
  width: 0;
  height: 0;
  @if $direction == 'up' {
    border-right: $height / 2 solid transparent;
    border-bottom: $width solid $color;
    border-left: $height / 2 solid transparent;
  } @else if $direction == 'down' {
    border-top: $width solid $color;
    border-right: $height / 2 solid transparent;
    border-left: $height / 2 solid transparent;
  } @else if $direction == 'left' {
    border-top: $height / 2 solid transparent;
    border-right: $width solid $color;
    border-bottom: $height / 2 solid transparent;
  } @else if $direction == 'right' {
    border-top: $height / 2 solid transparent;
    border-bottom: $height / 2 solid transparent;
    border-left: $width solid $color;
  }
}

@mixin corner-triangle($corner, $size, $color) {
  width: 0;
  height: 0;
  @if $corner == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  } @else if $corner == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  } @else if $corner == 'bottom-left' {
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $corner == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
}
